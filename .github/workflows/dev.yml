
on:
  pull_request:
    branches: [ "main" ]
    types: [ opened ]
    
jobs:

  do_on_create:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: gitcheckout
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'
      
      - name: Run actions/setup-maven@v3
        working-directory: gitcheckout
        run: |
          MVN_VERSION="3.6.3"
          MVN_INSTALLER="/tmp/mvn.tar.gz"
          wget https://dlcdn.apache.org/maven/maven-3/${MVN_VERSION}/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz -O ${MVN_INSTALLER}
          tar -xC /usr/local/sbin -vf ${MVN_INSTALLER}
          ln -s /usr/local/sbin/apache-maven-${MVN_VERSION}/bin/mvn /usr/local/sbin/mvn
          mvn -version
      
      - name: Hash Maven files
        working-directory: gitcheckout
        run: |
          mkdir -v -p /github/home/.m2/repository
          echo "MVN_HASH=${{ hashFiles('**/pom.xml') }}" >> $GITHUB_ENV
      
      - name: Check for Maven cache
        id: check-mvn-cache
        uses: actions/cache@v3.2.3
        with:
          path: /github/home/.m2/repository
          key: ${{ env.MVN_HASH }}
      
      - name: Install Dependencies
        working-directory: gitcheckout
        if: steps.check-mvn-cache.outputs.cache-hit != 'true'
        run: mvn --batch-mode -Dmaven.repo.local=/github/home/.m2/repository -s ./openshift/config/settings.xml dependency:copy-dependencies
          
      - name: Build with Maven
        working-directory: gitcheckout
        run: mvn --batch-mode -Dmaven.repo.local=/github/home/.m2/repository -s ./openshift/config/settings.xml -B clean test
        
      - name: Save Maven repo into cache
        if: ${{ steps.check-mvn-cache.outputs.cache-hit }} != 'true'
        uses: actions/cache@v3.2.3
        with:
          path: /github/home/.m2/repository
          key: ${{ env.MVN_HASH }}
          
#       - name: on_create
#         run: echo "On Create"
        
#       - name: create_label
#         env:
#           URL: ${{ github.event.pull_request.url }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           curl --location --request POST 'https://api.github.com/repos/BerryGelan/github-actions/issues/${{ github.event.pull_request.number }}/labels' \
#                --header "Accept: application/vnd.github.v3+json" \
#                --header "Authorization: token $GITHUB_TOKEN" \
#                --header "Content-Type: application/json" \
#                --data-raw '{
#                    "labels": ["enhancement"]
#                }'
